Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.

  Keys:
    Type: String
    Default: 'Control'
    AllowedValues:
      - Security
      - Control
      - Windows

Mappings:
  RegionMap:
    us-east-1:
      "HVM64": "ami-0ff8a91507f77f867"
    us-west-1:
      "HVM64": "ami-0bdb828fd58c52235"
    eu-west-1:
      "HVM64": "ami-047bb4163c506cd98"
    ap-southeast-1:
      "HVM64": "ami-08569b978cc4dfa10"
    ap-northeast-1:
      "HVM64": "ami-06cd52961ce9f0d85"

Resources:
  ECC:
    Type: AWS::EC2::Instance
    Metadata:
          AWS::CloudFormation::Init:
            config:
              packages:
                yum:
                  php: []
                  httpd: []
                  wget: []
                  unzip: []
                  git: []
              commands:
                test:
                  command: "wget https://www.tooplate.com/zip-templates/2100_artist.zip && unzip 2100_artist.zip && cp -r 2100_artist/* /var/www/html"
              services:
                sysvinit:
                  httpd:
                    enabled: true
                    ensureRunning: true
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - HVM64
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref Keys
      Tags:
        - Key: Name
          Value: !Join
            - " "
            - - "My"
              - "First"
              - !Ref AWS::Region
      SecurityGroups:
        - !Ref AppSG
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            yum update -y
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ECC --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECC --region ${AWS::Region}
  AppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  Printing:
    Description: Printing some info
    Value: !Sub
      - "This is EC2's Private IP = ${PrivateIp} EC2's Public IP = ${PublicIp}"
      - PrivateIp: !GetAtt
        - ECC
        - PrivateIp
        PublicIp: !GetAtt
        - ECC
        - PublicIp
